{
  "{\"filename\":\"/app/index.js\",\"env\":{},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],{\"loose\":false,\"spec\":false}],[[],null],[[],null],[[],{\"spec\":false}],[[],null],[[],{\"loose\":false}],[[],null],[[],null],[[],null],[[],{\"loose\":false}],[[],{\"loose\":false}],[[],null],[[],null],[[],null],[[],{\"loose\":false}],[[],null],[[],{\"loose\":false}],[[],null],[[],null],[[],{\"loose\":false}],[[],{\"async\":false,\"asyncGenerators\":false}]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/app\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.3": {
    "metadata": {
      "usedHelpers": [],
      "marked": [],
      "modules": {
        "imports": [],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/app/index.js",
      "filenameRelative": "/app/index.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          {
            "loose": false,
            "spec": false
          }
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "spec": false
          }
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          {
            "async": false,
            "asyncGenerators": false
          }
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "index.js",
      "sourceFileName": "index.js",
      "sourceRoot": "/app",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/app",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "index"
    },
    "ignored": false,
    "code": "// https://developers.facebook.com/docs/messenger-platform/getting-started/webhook-setup/\n// https://developers.facebook.com/docs/messenger-platform/getting-started/app-setup\n// https://developers.facebook.com/docs/messenger-platform/getting-started/quick-start\n\n\"use strict\";\n\n// Imports dependencies and set up http server\n\nvar express = require(\"express\"),\n    bodyParser = require(\"body-parser\"),\n    app = express().use(bodyParser.json()); // creates express http server\nvar request = require(\"request\");\n\n// import { checkUser, createUser } from './DBConn';\n\n// Get page access token\nvar PAGE_ACCESS_TOKEN = process.env.PAGE_ACCESS_TOKEN;\n\n// Sets server port and logs message on success\napp.listen(3000, function () {\n  return console.log(\"webhook is listening\");\n});\n\n// Adds support for GET requests to our webhook\napp.get(\"/webhook\", function (req, res) {\n  var VERIFY_TOKEN = process.env.VERIFY_TOKEN;\n\n  // Parse the query params\n  var mode = req.query[\"hub.mode\"];\n  var token = req.query[\"hub.verify_token\"];\n  var challenge = req.query[\"hub.challenge\"];\n\n  // Checks if a token and mode is in the query string of the request\n  if (mode && token) {\n    // Checks the mode and token sent is correct\n    if (mode === \"subscribe\" && token === VERIFY_TOKEN) {\n      // Responds with the challenge token from the request\n      console.log(\"WEBHOOK_VERIFIED\");\n      res.status(200).send(challenge);\n    } else {\n      // Responds with '403 Forbidden' if verify tokens do not match\n      res.sendStatus(403);\n    }\n  }\n});\n\n// Creates the endpoint for our webhook\napp.post(\"/webhook\", function (req, res) {\n  var body = req.body;\n\n  // Checks this is an event from a page subscription\n  if (body.object === \"page\") {\n    // Iterates over each entry - there may be multiple if batched\n    body.entry.forEach(function (entry) {\n      // Gets the message. entry.messaging is an array, but\n      // will only ever contain one message, so we get index 0\n      var webhook_event = entry.messaging[0];\n      // console.log(webhook_event);\n\n      // Get the sender PSID\n      var sender_psid = webhook_event.sender.id;\n      // console.log(\"Sender PSID: \" + sender_psid);\n\n      // Check if the event is a message or postback and\n      // pass the event to the appropriate handler function\n      if (webhook_event.message) {\n        // getName(sender_psid, function(response){\n        //     checkUser(sender_psid,response);\n        // });\n        handleMessage(sender_psid, webhook_event.message);\n      } else if (webhook_event.postback) {\n        handlePostback(sender_psid, webhook_event.postback);\n      }\n    });\n\n    // Returns a '200 OK' response to all requests\n    res.status(200).send(\"EVENT_RECEIVED\");\n  } else {\n    // Returns a '404 Not Found' if event is not from a page subscription\n    res.sendStatus(404);\n  }\n});\n\n// Gets users name from facebook graph api\n// function getName(sender_psid,callback){\n//     var name = \"Empty\";\n//     request({\n//         url:\"https://graph.facebook.com/v3.3/\" + sender_psid,\n//         qs:{\n//             access_token: PAGE_ACCESS_TOKEN,\n//             fields: \"first_name\",\n//         },\n//         method:\"GET\"\n//     }, function(error,response,body){\n//         if (error){\n//             console.log(error)\n//         }else{\n//             var bodyObj = JSON.parse(body);\n//             name = bodyObj.first_name;\n//             console.log(\"Name: \" + name);\n//             return callback(name)\n//         }\n//     });\n//     return name;\n// }\n\n// Handles messages events\nfunction handleMessage(sender_psid, received_message) {\n  var response = void 0;\n\n  // Check if the message contains text\n  if (received_message.text) {\n    console.log(\"Received message: \\\"\" + received_message.text + \"\\\"\");\n\n    response = processMessage(received_message);\n    // Default response (for debugging)\n    // Create the payload for a basic text message\n    // response = {\n    //   text: `You sent the message: \"${received_message.text}\".`\n    // };\n  } else {\n    response = defaultResponse();\n    //     // Gets the URL of the message attachment\n    //     let attachment_url = received_message.attachments[0].payload.url;\n\n    //     response = {\n    //       attachment: {\n    //         type: \"template\",\n    //         payload: {\n    //           template_type: \"generic\",\n    //           elements: [\n    //             {\n    //               title: \"Is this the right picture?\",\n    //               subtitle: \"Tap a button to answer.\",\n    //               image_url: attachment_url,\n    //               buttons: [\n    //                 {\n    //                   type: \"postback\",\n    //                   title: \"Yes!\",\n    //                   payload: \"yes\"\n    //                 },\n    //                 {\n    //                   type: \"postback\",\n    //                   title: \"No!\",\n    //                   payload: \"no\"\n    //                 }\n    //               ]\n    //             }\n    //           ]\n    //         }\n    //       }\n    //     };\n  }\n\n  // Sends the response message\n  callSendAPI(sender_psid, response);\n}\n\nfunction processMessage(message) {\n  // NLP: https://developers.facebook.com/docs/messenger-platform/built-in-nlp\n  var entities = message.nlp[\"entities\"];\n\n  // Check greeting\n  var is_greeting = entities[\"greetings\"] != null && entities[\"greetings\"][0][\"confidence\"] > 0.8; // Greeting threshold set to 0.8\n\n  // Retrieve first intent object\n  var intent = entities[\"intent\"][0];\n\n  if (intent[\"confidence\"] > 0.5) {\n    // Process intent\n    var intent_category = intent.split(\"_\")[0];\n    var response = null;\n\n    if (intent_category === \"recommendation\") {\n      // Handle recommendation\n    }\n\n    if (intent_category === \"enquiry\") {\n      // Handle enquiry\n    }\n\n    if (intent_category === \"cart\") {\n      // Handle shopping cart\n    }\n\n    if (intent_category === \"return\") {\n      // Handle order returns\n    }\n\n    if (intent_category === \"refund\") {\n      // Handle order refund\n    }\n\n    if (response === null) {\n      return defaultResponse();\n    }\n\n    return response;\n  } else if (is_greeting) {\n    // Message has no intent, just greeting\n    return generateResponseFromMessage(\"Hi there! Welcome to MINDS. How can I help you?\");\n  }\n\n  Object.keys(entities).forEach(function (key) {\n    console.log(key);\n    console.log(entities[key]);\n  });\n\n  return defaultResponse();\n}\n\nfunction defaultResponse() {\n  return generateResponseFromMessage(\"We could not understand your message. Kindly rephrase your message and send us again.\");\n}\n\nfunction generateResponseFromMessage(message) {\n  return {\n    text: message\n  };\n}\n\n// Handles messaging_postbacks events\nfunction handlePostback(sender_psid, received_postback) {\n  var response = void 0;\n\n  //   // Get the payload for the postback\n  //   let payload = received_postback.payload;\n\n  //   // Set the response based on the postback payload\n  //   if (payload === \"yes\") {\n  //     response = { text: \"Thanks!\" };\n  //   } else if (payload === \"no\") {\n  //     response = { text: \"Oops, try sending another image.\" };\n  //   }\n\n  response = defaultResponse();\n\n  // Send the message to acknowledge the postback\n  callSendAPI(sender_psid, response);\n}\n\n// Sends response messages via the Send API\nfunction callSendAPI(sender_psid, response) {\n  // Construct the message body\n  var request_body = {\n    recipient: {\n      id: sender_psid\n    },\n    message: response\n  };\n\n  // Send the HTTP request to the Messenger Platform\n  request({\n    uri: \"https://graph.facebook.com/v2.6/me/messages\",\n    qs: { access_token: PAGE_ACCESS_TOKEN },\n    method: \"POST\",\n    json: request_body\n  }, function (err, res, body) {\n    if (!err) {\n      console.log(\"Message sent!\");\n    } else {\n      console.error(\"Unable to send message:\" + err);\n    }\n  });\n}\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "express",
        "require",
        "bodyParser",
        "app",
        "use",
        "json",
        "request",
        "PAGE_ACCESS_TOKEN",
        "process",
        "env",
        "listen",
        "console",
        "log",
        "get",
        "req",
        "res",
        "VERIFY_TOKEN",
        "mode",
        "query",
        "token",
        "challenge",
        "status",
        "send",
        "sendStatus",
        "post",
        "body",
        "object",
        "entry",
        "forEach",
        "webhook_event",
        "messaging",
        "sender_psid",
        "sender",
        "id",
        "message",
        "handleMessage",
        "postback",
        "handlePostback",
        "received_message",
        "response",
        "text",
        "processMessage",
        "defaultResponse",
        "callSendAPI",
        "entities",
        "nlp",
        "is_greeting",
        "intent",
        "intent_category",
        "split",
        "generateResponseFromMessage",
        "Object",
        "keys",
        "key",
        "received_postback",
        "request_body",
        "recipient",
        "uri",
        "qs",
        "access_token",
        "method",
        "err",
        "error"
      ],
      "mappings": "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",
      "file": "index.js",
      "sourceRoot": "/app",
      "sourcesContent": [
        "// https://developers.facebook.com/docs/messenger-platform/getting-started/webhook-setup/\n// https://developers.facebook.com/docs/messenger-platform/getting-started/app-setup\n// https://developers.facebook.com/docs/messenger-platform/getting-started/quick-start\n\n\"use strict\";\n\n// Imports dependencies and set up http server\nconst express = require(\"express\"),\n  bodyParser = require(\"body-parser\"),\n  app = express().use(bodyParser.json()); // creates express http server\nconst request = require(\"request\");\n\n// import { checkUser, createUser } from './DBConn';\n\n// Get page access token\nconst PAGE_ACCESS_TOKEN = process.env.PAGE_ACCESS_TOKEN;\n\n// Sets server port and logs message on success\napp.listen(3000, () => console.log(\"webhook is listening\"));\n\n// Adds support for GET requests to our webhook\napp.get(\"/webhook\", (req, res) => {\n  let VERIFY_TOKEN = process.env.VERIFY_TOKEN;\n\n  // Parse the query params\n  let mode = req.query[\"hub.mode\"];\n  let token = req.query[\"hub.verify_token\"];\n  let challenge = req.query[\"hub.challenge\"];\n\n  // Checks if a token and mode is in the query string of the request\n  if (mode && token) {\n    // Checks the mode and token sent is correct\n    if (mode === \"subscribe\" && token === VERIFY_TOKEN) {\n      // Responds with the challenge token from the request\n      console.log(\"WEBHOOK_VERIFIED\");\n      res.status(200).send(challenge);\n    } else {\n      // Responds with '403 Forbidden' if verify tokens do not match\n      res.sendStatus(403);\n    }\n  }\n});\n\n// Creates the endpoint for our webhook\napp.post(\"/webhook\", (req, res) => {\n  let body = req.body;\n\n  // Checks this is an event from a page subscription\n  if (body.object === \"page\") {\n    // Iterates over each entry - there may be multiple if batched\n    body.entry.forEach(function(entry) {\n      // Gets the message. entry.messaging is an array, but\n      // will only ever contain one message, so we get index 0\n      let webhook_event = entry.messaging[0];\n      // console.log(webhook_event);\n\n      // Get the sender PSID\n      let sender_psid = webhook_event.sender.id;\n      // console.log(\"Sender PSID: \" + sender_psid);\n      \n      // Check if the event is a message or postback and\n      // pass the event to the appropriate handler function\n      if (webhook_event.message) {\n        // getName(sender_psid, function(response){\n        //     checkUser(sender_psid,response);\n        // });\n        handleMessage(sender_psid, webhook_event.message);\n      } else if (webhook_event.postback) {\n        handlePostback(sender_psid, webhook_event.postback);\n      }\n    });\n\n    // Returns a '200 OK' response to all requests\n    res.status(200).send(\"EVENT_RECEIVED\");\n  } else {\n    // Returns a '404 Not Found' if event is not from a page subscription\n    res.sendStatus(404);\n  }\n});\n\n// Gets users name from facebook graph api\n// function getName(sender_psid,callback){\n//     var name = \"Empty\";\n//     request({\n//         url:\"https://graph.facebook.com/v3.3/\" + sender_psid,\n//         qs:{\n//             access_token: PAGE_ACCESS_TOKEN,\n//             fields: \"first_name\",\n//         },\n//         method:\"GET\"\n//     }, function(error,response,body){\n//         if (error){\n//             console.log(error)\n//         }else{\n//             var bodyObj = JSON.parse(body);\n//             name = bodyObj.first_name;\n//             console.log(\"Name: \" + name);\n//             return callback(name)\n//         }\n//     });\n//     return name;\n// }\n\n// Handles messages events\nfunction handleMessage(sender_psid, received_message) {\n  let response;\n  \n  // Check if the message contains text\n  if (received_message.text) {\n    console.log(`Received message: \"${received_message.text}\"`);\n    \n    response = processMessage(received_message);\n    // Default response (for debugging)\n    // Create the payload for a basic text message\n    // response = {\n    //   text: `You sent the message: \"${received_message.text}\".`\n    // };\n  } else {\n    response = defaultResponse();\n//     // Gets the URL of the message attachment\n//     let attachment_url = received_message.attachments[0].payload.url;\n    \n//     response = {\n//       attachment: {\n//         type: \"template\",\n//         payload: {\n//           template_type: \"generic\",\n//           elements: [\n//             {\n//               title: \"Is this the right picture?\",\n//               subtitle: \"Tap a button to answer.\",\n//               image_url: attachment_url,\n//               buttons: [\n//                 {\n//                   type: \"postback\",\n//                   title: \"Yes!\",\n//                   payload: \"yes\"\n//                 },\n//                 {\n//                   type: \"postback\",\n//                   title: \"No!\",\n//                   payload: \"no\"\n//                 }\n//               ]\n//             }\n//           ]\n//         }\n//       }\n//     };\n    \n  }\n\n  // Sends the response message\n  callSendAPI(sender_psid, response);\n}\n\nfunction processMessage(message) {\n  // NLP: https://developers.facebook.com/docs/messenger-platform/built-in-nlp\n  let entities = message.nlp[\"entities\"];\n\n  // Check greeting\n  let is_greeting =\n    entities[\"greetings\"] != null &&\n    entities[\"greetings\"][0][\"confidence\"] > 0.8; // Greeting threshold set to 0.8\n\n  // Retrieve first intent object\n  let intent = entities[\"intent\"][0];\n\n  if (intent[\"confidence\"] > 0.5) {\n    // Process intent\n    let intent_category = intent.split(\"_\")[0];\n    let response = null;\n\n    if (intent_category === \"recommendation\") {\n      // Handle recommendation\n    }\n\n    if (intent_category === \"enquiry\") {\n      // Handle enquiry\n    }\n\n    if (intent_category === \"cart\") {\n      // Handle shopping cart\n    }\n\n    if (intent_category === \"return\") {\n      // Handle order returns\n    }\n\n    if (intent_category === \"refund\") {\n      // Handle order refund\n    }\n\n    if (response === null) {\n      return defaultResponse();\n    }\n\n    return response;\n  } else if (is_greeting) {\n    // Message has no intent, just greeting\n    return generateResponseFromMessage(\n      \"Hi there! Welcome to MINDS. How can I help you?\"\n    );\n  }\n\n  Object.keys(entities).forEach(key => {\n    console.log(key);\n    console.log(entities[key]);\n  });\n\n  return defaultResponse();\n}\n\nfunction defaultResponse() {\n  return generateResponseFromMessage(\n    \"We could not understand your message. Kindly rephrase your message and send us again.\"\n  );\n}\n\nfunction generateResponseFromMessage(message) {\n  return {\n    text: message\n  };\n}\n\n// Handles messaging_postbacks events\nfunction handlePostback(sender_psid, received_postback) {\n  let response;\n  \n//   // Get the payload for the postback\n//   let payload = received_postback.payload;\n  \n//   // Set the response based on the postback payload\n//   if (payload === \"yes\") {\n//     response = { text: \"Thanks!\" };\n//   } else if (payload === \"no\") {\n//     response = { text: \"Oops, try sending another image.\" };\n//   }\n  \n  response = defaultResponse();\n  \n  // Send the message to acknowledge the postback\n  callSendAPI(sender_psid, response);\n}\n\n// Sends response messages via the Send API\nfunction callSendAPI(sender_psid, response) {\n  // Construct the message body\n  let request_body = {\n    recipient: {\n      id: sender_psid\n    },\n    message: response\n  };\n\n  // Send the HTTP request to the Messenger Platform\n  request(\n    {\n      uri: \"https://graph.facebook.com/v2.6/me/messages\",\n      qs: { access_token: PAGE_ACCESS_TOKEN },\n      method: \"POST\",\n      json: request_body\n    },\n    (err, res, body) => {\n      if (!err) {\n        console.log(\"Message sent!\");\n      } else {\n        console.error(\"Unable to send message:\" + err);\n      }\n    }\n  );\n}\n"
      ]
    },
    "mtime": 1592291832000
  },
  "{\"filename\":\"/app/DBConn.js\",\"env\":{},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],{\"loose\":false,\"spec\":false}],[[],null],[[],null],[[],{\"spec\":false}],[[],null],[[],{\"loose\":false}],[[],null],[[],null],[[],null],[[],{\"loose\":false}],[[],{\"loose\":false}],[[],null],[[],null],[[],null],[[],{\"loose\":false}],[[],null],[[],{\"loose\":false}],[[],null],[[],null],[[],{\"loose\":false}],[[],{\"async\":false,\"asyncGenerators\":false}]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/app\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.3": {
    "metadata": {
      "usedHelpers": [],
      "marked": [],
      "modules": {
        "imports": [],
        "exports": {
          "exported": [
            "checkUser",
            "createUser"
          ],
          "specifiers": [
            {
              "kind": "local",
              "local": "checkUser",
              "exported": "checkUser"
            },
            {
              "kind": "local",
              "local": "createUser",
              "exported": "createUser"
            }
          ]
        }
      }
    },
    "options": {
      "filename": "/app/DBConn.js",
      "filenameRelative": "/app/DBConn.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          {
            "loose": false,
            "spec": false
          }
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "spec": false
          }
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          {
            "async": false,
            "asyncGenerators": false
          }
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "DBConn.js",
      "sourceFileName": "DBConn.js",
      "sourceRoot": "/app",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/app",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "DBConn"
    },
    "ignored": false,
    "code": "'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nvar Pool = require('pg').Pool;\nvar pool = new Pool({\n    user: DB_USER,\n    host: DB_HOST,\n    database: DB_NAME,\n    password: DB_PASSWORD,\n    port: DB_PORT\n});\n\nfunction checkUser(fbid, name) {\n    var rowCount = \"\";\n\n    pool.query('SELECT * FROM users where fbid= $1', [fbid], function (error, results) {\n        if (error) {\n            throw error;\n        }\n\n        rowCount = results.rowCount;\n        if (rowCount == 0) {\n            createUser(fbid, name);\n        }\n    });\n\n    return rowCount;\n}\n\nfunction createUser(fbid, name) {\n    console.log(fbid + \" \" + name);\n    pool.query('INSERT INTO users(fbid,name) VALUES ($1,$2)', [fbid, name], function (error, results) {\n        if (error) {\n            throw error;\n        }\n        console.log(results.insertId);\n    });\n}\n\nexports.checkUser = checkUser;\nexports.createUser = createUser;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkRCQ29ubi5qcyJdLCJuYW1lcyI6WyJQb29sIiwicmVxdWlyZSIsInBvb2wiLCJ1c2VyIiwiREJfVVNFUiIsImhvc3QiLCJEQl9IT1NUIiwiZGF0YWJhc2UiLCJEQl9OQU1FIiwicGFzc3dvcmQiLCJEQl9QQVNTV09SRCIsInBvcnQiLCJEQl9QT1JUIiwiY2hlY2tVc2VyIiwiZmJpZCIsIm5hbWUiLCJyb3dDb3VudCIsInF1ZXJ5IiwiZXJyb3IiLCJyZXN1bHRzIiwiY3JlYXRlVXNlciIsImNvbnNvbGUiLCJsb2ciLCJpbnNlcnRJZCJdLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQSxJQUFNQSxPQUFPQyxRQUFRLElBQVIsRUFBY0QsSUFBM0I7QUFDQSxJQUFNRSxPQUFPLElBQUlGLElBQUosQ0FBUztBQUNwQkcsVUFBTUMsT0FEYztBQUVwQkMsVUFBTUMsT0FGYztBQUdwQkMsY0FBVUMsT0FIVTtBQUlwQkMsY0FBVUMsV0FKVTtBQUtwQkMsVUFBTUM7QUFMYyxDQUFULENBQWI7O0FBUUEsU0FBU0MsU0FBVCxDQUFtQkMsSUFBbkIsRUFBd0JDLElBQXhCLEVBQTZCO0FBQ3pCLFFBQUlDLFdBQVcsRUFBZjs7QUFFQWQsU0FBS2UsS0FBTCxDQUFXLG9DQUFYLEVBQWdELENBQUNILElBQUQsQ0FBaEQsRUFBd0QsVUFBQ0ksS0FBRCxFQUFRQyxPQUFSLEVBQW9CO0FBQzVFLFlBQUlELEtBQUosRUFBVztBQUNQLGtCQUFNQSxLQUFOO0FBQ0g7O0FBRURGLG1CQUFXRyxRQUFRSCxRQUFuQjtBQUNBLFlBQUlBLFlBQVksQ0FBaEIsRUFBa0I7QUFDZEksdUJBQVdOLElBQVgsRUFBZ0JDLElBQWhCO0FBQ0g7QUFDQSxLQVREOztBQVdBLFdBQU9DLFFBQVA7QUFDSDs7QUFFRCxTQUFTSSxVQUFULENBQW9CTixJQUFwQixFQUF5QkMsSUFBekIsRUFBOEI7QUFDMUJNLFlBQVFDLEdBQVIsQ0FBWVIsT0FBTyxHQUFQLEdBQWFDLElBQXpCO0FBQ0FiLFNBQUtlLEtBQUwsQ0FBVyw2Q0FBWCxFQUF5RCxDQUFDSCxJQUFELEVBQU1DLElBQU4sQ0FBekQsRUFBcUUsVUFBQ0csS0FBRCxFQUFPQyxPQUFQLEVBQW1CO0FBQ3BGLFlBQUlELEtBQUosRUFBVTtBQUNOLGtCQUFNQSxLQUFOO0FBQ0g7QUFDREcsZ0JBQVFDLEdBQVIsQ0FBWUgsUUFBUUksUUFBcEI7QUFDSCxLQUxEO0FBTUg7O1FBRVFWLFMsR0FBQUEsUztRQUFXTyxVLEdBQUFBLFUiLCJmaWxlIjoiREJDb25uLmpzIiwic291cmNlUm9vdCI6Ii9hcHAiLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBQb29sID0gcmVxdWlyZSgncGcnKS5Qb29sXG5jb25zdCBwb29sID0gbmV3IFBvb2woe1xuICB1c2VyOiBEQl9VU0VSLFxuICBob3N0OiBEQl9IT1NULFxuICBkYXRhYmFzZTogREJfTkFNRSxcbiAgcGFzc3dvcmQ6IERCX1BBU1NXT1JELFxuICBwb3J0OiBEQl9QT1JULFxufSlcblxuZnVuY3Rpb24gY2hlY2tVc2VyKGZiaWQsbmFtZSl7XG4gICAgdmFyIHJvd0NvdW50ID0gXCJcIjtcbiAgICBcbiAgICBwb29sLnF1ZXJ5KCdTRUxFQ1QgKiBGUk9NIHVzZXJzIHdoZXJlIGZiaWQ9ICQxJyxbZmJpZF0sIChlcnJvciwgcmVzdWx0cykgPT4ge1xuICAgIGlmIChlcnJvcikge1xuICAgICAgICB0aHJvdyBlcnJvcjtcbiAgICB9XG4gICAgXG4gICAgcm93Q291bnQgPSByZXN1bHRzLnJvd0NvdW50XG4gICAgaWYgKHJvd0NvdW50ID09IDApe1xuICAgICAgICBjcmVhdGVVc2VyKGZiaWQsbmFtZSk7XG4gICAgfVxuICAgIH0pXG4gICAgXG4gICAgcmV0dXJuIHJvd0NvdW50O1xufVxuXG5mdW5jdGlvbiBjcmVhdGVVc2VyKGZiaWQsbmFtZSl7XG4gICAgY29uc29sZS5sb2coZmJpZCArIFwiIFwiICsgbmFtZSlcbiAgICBwb29sLnF1ZXJ5KCdJTlNFUlQgSU5UTyB1c2VycyhmYmlkLG5hbWUpIFZBTFVFUyAoJDEsJDIpJyxbZmJpZCxuYW1lXSwoZXJyb3IscmVzdWx0cykgPT4ge1xuICAgICAgICBpZiAoZXJyb3Ipe1xuICAgICAgICAgICAgdGhyb3cgZXJyb3JcbiAgICAgICAgfVxuICAgICAgICBjb25zb2xlLmxvZyhyZXN1bHRzLmluc2VydElkKVxuICAgIH0pXG59XG5cbmV4cG9ydCB7IGNoZWNrVXNlciwgY3JlYXRlVXNlciB9O1xuIl19",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "DBConn.js"
      ],
      "names": [
        "Pool",
        "require",
        "pool",
        "user",
        "DB_USER",
        "host",
        "DB_HOST",
        "database",
        "DB_NAME",
        "password",
        "DB_PASSWORD",
        "port",
        "DB_PORT",
        "checkUser",
        "fbid",
        "name",
        "rowCount",
        "query",
        "error",
        "results",
        "createUser",
        "console",
        "log",
        "insertId"
      ],
      "mappings": ";;;;;AAAA,IAAMA,OAAOC,QAAQ,IAAR,EAAcD,IAA3B;AACA,IAAME,OAAO,IAAIF,IAAJ,CAAS;AACpBG,UAAMC,OADc;AAEpBC,UAAMC,OAFc;AAGpBC,cAAUC,OAHU;AAIpBC,cAAUC,WAJU;AAKpBC,UAAMC;AALc,CAAT,CAAb;;AAQA,SAASC,SAAT,CAAmBC,IAAnB,EAAwBC,IAAxB,EAA6B;AACzB,QAAIC,WAAW,EAAf;;AAEAd,SAAKe,KAAL,CAAW,oCAAX,EAAgD,CAACH,IAAD,CAAhD,EAAwD,UAACI,KAAD,EAAQC,OAAR,EAAoB;AAC5E,YAAID,KAAJ,EAAW;AACP,kBAAMA,KAAN;AACH;;AAEDF,mBAAWG,QAAQH,QAAnB;AACA,YAAIA,YAAY,CAAhB,EAAkB;AACdI,uBAAWN,IAAX,EAAgBC,IAAhB;AACH;AACA,KATD;;AAWA,WAAOC,QAAP;AACH;;AAED,SAASI,UAAT,CAAoBN,IAApB,EAAyBC,IAAzB,EAA8B;AAC1BM,YAAQC,GAAR,CAAYR,OAAO,GAAP,GAAaC,IAAzB;AACAb,SAAKe,KAAL,CAAW,6CAAX,EAAyD,CAACH,IAAD,EAAMC,IAAN,CAAzD,EAAqE,UAACG,KAAD,EAAOC,OAAP,EAAmB;AACpF,YAAID,KAAJ,EAAU;AACN,kBAAMA,KAAN;AACH;AACDG,gBAAQC,GAAR,CAAYH,QAAQI,QAApB;AACH,KALD;AAMH;;QAEQV,S,GAAAA,S;QAAWO,U,GAAAA,U",
      "file": "DBConn.js",
      "sourceRoot": "/app",
      "sourcesContent": [
        "const Pool = require('pg').Pool\nconst pool = new Pool({\n  user: DB_USER,\n  host: DB_HOST,\n  database: DB_NAME,\n  password: DB_PASSWORD,\n  port: DB_PORT,\n})\n\nfunction checkUser(fbid,name){\n    var rowCount = \"\";\n    \n    pool.query('SELECT * FROM users where fbid= $1',[fbid], (error, results) => {\n    if (error) {\n        throw error;\n    }\n    \n    rowCount = results.rowCount\n    if (rowCount == 0){\n        createUser(fbid,name);\n    }\n    })\n    \n    return rowCount;\n}\n\nfunction createUser(fbid,name){\n    console.log(fbid + \" \" + name)\n    pool.query('INSERT INTO users(fbid,name) VALUES ($1,$2)',[fbid,name],(error,results) => {\n        if (error){\n            throw error\n        }\n        console.log(results.insertId)\n    })\n}\n\nexport { checkUser, createUser };\n"
      ]
    },
    "mtime": 1592290107000
  }
}